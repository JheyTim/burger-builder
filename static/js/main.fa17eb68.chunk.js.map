{"version":3,"sources":["store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","hoc/asyncComponent/asyncComponent.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","addIngredient","ingredientName","type","actionTypes","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseInit","purchaseBurger","orderData","token","post","id","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","userId","res","orders","key","push","err","authSuccess","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","setItem","idToken","Date","getTime","expiresIn","localId","setAuthRedirectPath","path","authCheckState","getItem","expirationDate","module","exports","instance","create","baseURL","backdrop","props","show","className","classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","children","modalClosed","style","transform","opacity","Component","button","disabled","Button","btnType","join","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger","asyncComponent","importComponent","component","cmp","default","C","logo","Logo","height","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","to","link","exact","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","actionsTypes","loading","purchased","action","newOrder","authRedirectPath","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.fa17eb68.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\n\nexport const addIngredient = ingredientName => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName\n    }\n};\n\nexport const removeIngredient = ingredientName => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName\n    }\n};\n\nexport const setIngredients = ingredients => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n};\n\n\n\n\n\n\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get( '/ingredients.json' )\n        .then( response => {\n            dispatch(setIngredients(response.data));\n        } )\n        .catch( error => {\n            dispatch(fetchIngredientsFailed())\n        } );\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        id,\n        orderData\n    }\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n}\n\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n}\n\n\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error\n    }\n}\n\nexport const fetchOrderStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post( `/orders.json?auth=${token}`, orderData )\n            .then( response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            } )\n            .catch( error => {\n                dispatch(purchaseBurgerFail(error));\n            } );\n    }\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrderStart());\n        axios.get(`/orders.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\n            .then(res => {\n                const fetchOrders = [];\n                for (let key in res.data) {\n                    fetchOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchOrders))\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err))\n            })\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token,\n        userId\n    }\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error\n    }\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId')\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    }\n}\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email,\n            password,\n            returnSecureToken: true\n        };\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAcGOhSd2gx0gWdNTqCJ2R-yMxr10ygVX0';\n        if (!isSignup) {\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAcGOhSd2gx0gWdNTqCJ2R-yMxr10ygVX0\";\n        }\n        axios.post(url, authData)\n            .then(res => {\n                localStorage.setItem('token', res.data.idToken);\n                localStorage.setItem('expirationDate', new Date(new Date().getTime() + res.data.expiresIn * 1000));\n                localStorage.setItem('userId', res.data.localId)\n                dispatch(authSuccess(res.data.idToken, res.data.localId));\n                dispatch(checkAuthTimeout(res.data.expiresIn));\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            })\n    }\n}\n\nexport const setAuthRedirectPath = path => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());        \n            } else {\n                dispatch(authSuccess(token, localStorage.getItem('userId')));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    };\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-b8b32.firebaseio.com/'\n});\n\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React, { Component, Fragment } from 'react';\n\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render () {\n        return (\n            <Fragment>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component, Fragment } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Fragment>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Fragment>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n        switch ( this.props.type ) {\n            case ( 'bread-bottom' ):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ( 'bread-top' ):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ( 'meat' ):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ( 'cheese' ):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ( 'bacon' ):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            case ( 'salad' ):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        }\n\n        componentDidMount() {\n            importComponent()\n                .then(cmp => {\n                    this.setState({ component: cmp.default });\n                });\n        }\n\n        render () {\n            const C = this.state.component;\n            return C ? <C {...this.props} /> : null;\n        }\n\n    }\n}\n\nexport default asyncComponent;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = ( props ) => (\n    <li className={classes.NavigationItem}>\n        <NavLink activeClassName={classes.active} to={props.link} exact>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\n        {!props.isAuthenticated \n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem> \n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>\n        }\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth}/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React, { Fragment } from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Fragment>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth}/>\n                </nav>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default sideDrawer;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Fragment>\n                <Toolbar isAuth={this.props.isAuthenticated} drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>{props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component, Fragment } from 'react';\n\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    // This could be a functional component, doesn't have to be a class\n    render () {\n        const ingredientSummary = Object.keys( this.props.ingredients )\n            .map( igKey => {\n                return (\n                    <li key={igKey}>\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                    </li> );\n            } );\n\n        return (\n            <Fragment>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed( 2 )}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Fragment>\n        );\n    }\n}\n\nexport default OrderSummary;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport axios from '../../axios-orders';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nexport class BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount () {\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState( { purchasing: true } );\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.props.ings ) {\n            burger = (\n                <Fragment>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuthenticated}\n                        price={this.props.price} />\n                </Fragment>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        // {salad: true, meat: false, ...}\n        return (\n            <Fragment>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n    componentDidMount () {\n        this.props.onLogout()\n    }\n    render () {\n        return <Redirect to=\"/\"/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout')\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders')\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth')\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render () {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={asyncAuth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n            <Route path=\"/checkout\" component={asyncCheckout} />\n            <Route path=\"/orders\" component={asyncOrders} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/auth\" component={asyncAuth} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionsTypes from '../actions/actionTypes';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst reducer = (state = initialState, actions) => {\n    switch(actions.type) {\n        case actionsTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [actions.ingredientName]: state.ingredients[actions.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[actions.ingredientName],\n                building: true\n            };\n        case actionsTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [actions.ingredientName]: state.ingredients[actions.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[actions.ingredientName],\n                building: true\n            };\n        case actionsTypes.SET_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: {\n                    salad: actions.ingredients.salad,\n                    bacon: actions.ingredients.bacon,\n                    cheese: actions.ingredients.cheese,\n                    meat: actions.ingredients.meat\n                },\n                totalPrice: 4,\n                error: false,\n                building: false\n            };\n        case actionsTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error: true\n            };\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return {\n                ...state,\n                purchased: false\n            }\n        case actionTypes.PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                ...action.orderData,\n                id: action.id\n            }\n            return {\n                ...state,\n                loading: false,\n                orders: state.orders.concat(newOrder),\n                purchased: true\n            };\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n\n        case actionTypes.FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            };\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n        default: \n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return {\n                ...state,\n                error: null,\n                loading: true\n            };\n        case actionTypes.AUTH_SUCCESS:\n            return {\n                ...state,\n                token: action.token,\n                userId: action.userId,\n                error: null,\n                loading: false\n            }\n        case actionTypes.AUTH_FAIL:\n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            }\n        case actionTypes.AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null,\n                userId: null\n            }\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\n            return {\n                ...state,\n                authRedirectPath: action.path\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}